================================================================================
Module
================================================================================

module palm

--------------------------------------------------------------------------------

(source_file
  (module
    (module_name)))

================================================================================
Import
================================================================================

module palm/std

import palm/std/list
import palm/std/list.{List, contains}
import palm/std/bool as boolean
import a
import a/b
import a.{b}
import a/b.{c, d}
import a/b.{c as d, e}
import a/b.{c, D as E}
import a/b.{c as d} as e
import animal/cat as kitty
import animal.{Cat as Kitty} as a
import animal.{}

--------------------------------------------------------------------------------

(source_file
  (module
    (module_name))
  (import
    (module_name))
  (import
    (module_name)
    (unqualified_imports
      (unqualified_import
        (identifier))
      (unqualified_import
        (identifier))))
  (import
    (module_name)
    (identifier)))

================================================================================
Const
================================================================================

module palm

const name = "John Doe"
const PI = 3.14
const data = Some("Json data")
const sum_of_all = 5 + 5 + 7
const a: Int = 1234
const a: Float = 12.34
// const a = [1, 2]
const a = list.new(1, 2, 3)
const a = Node
const a = Node()
const a = Cat("Ginny", 1950)
// const a = Person(name: "Billy", age: 52)
// const a = uri.Uri(host: "github.com")
// const a: option.Option(String) = option.Some("Hello, World!")

--------------------------------------------------------------------------------

(source_file
  (module
    (module_name))
  (const
    (identifier)
    (string
      (quoted_content)))
  (const
    (identifier)
    (float))
  (const
    (identifier)
    (function_call
      (identifier)
      (arguments
        (argument
          (string
            (quoted_content))))))
  (const
    (identifier)
    (binary_expression
      (binary_expression
        (integer)
        (integer))
      (integer)))
  (const
    (identifier)
    (type
      (type_identifier))
    (integer))
  (const
    (identifier)
    (type
      (type_identifier))
    (float))
  (comment)
  (const
    (identifier)
    (function_call
      (field_access
        (identifier)
        (label))
      (arguments
        (argument
          (integer))
        (argument
          (integer))
        (argument
          (integer)))))
  (const
    (identifier)
    (identifier))
  (const
    (identifier)
    (function_call
      (identifier)
      (arguments)))
  (const
    (identifier)
    (function_call
      (identifier)
      (arguments
        (argument
          (string
            (quoted_content)))
        (argument
          (integer)))))
  (comment)
  (comment)
  (comment))

================================================================================
Let
================================================================================

module palm

fn main() {
  let name = "John Doe"
  let PI = 3.14
  let data = Some("Json data")
}

--------------------------------------------------------------------------------

(source_file
  (module
    (module_name))
  (function
    (identifier)
    (let
      (identifier)
      (string
        (quoted_content)))
    (let
      (identifier)
      (float))
    (let
      (identifier)
      (function_call
        (identifier)
        (arguments
          (argument
            (string
              (quoted_content))))))))
