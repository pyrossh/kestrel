module std

enum option[T] =
  | none
  | some(T)

enum Option<T> =
  | None
  | Some(T)

fn (o option[T]) get(): T =
  match o
    some(val) -> val
    none -> fail("called 'option.get()' on a 'none' value")

fn (o option[T: ToStr]) to_str(): str =
  match o
    some(v) -> v.to_str()
    none -> "none"
